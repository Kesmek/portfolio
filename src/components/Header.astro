---
import { Menu, Moon, Sun, SunMoon } from "lucide-astro";
import Link from "@components/Link.astro";
---

<header>
  <nav>
    <ul>
      <li>
        <Link as="a" href="/">Home</Link>
      </li>
      <li>
        <Link as="a" href="/about">About</Link>
      </li>
      <li>
        <Link as="a" href="/projects">Projects</Link>
      </li>
      <li>
        <Link as="button" class="mode-toggle" id="mode-toggle">
          <Sun slot="icon" class="mode-toggle__icon light" />
          <Moon slot="icon" class="mode-toggle__icon dark" />
          <SunMoon slot="icon" class="mode-toggle__icon auto" />
        </Link>
      </li>
    </ul>
  </nav>
  <Link as="button" class="popover-button" popovertarget="popover-menu"
    ><Menu slot="icon" />Menu</Link
  >
  <nav popover id="popover-menu">
    <ul>
      <li>
        <Link as="a" href="/">Home</Link>
      </li>
      <li>
        <Link as="a" href="/about">About</Link>
      </li>
      <li>
        <Link as="a" href="/projects">Projects</Link>
      </li>
      <li>
        <Link as="button" class="mode-toggle" id="mode-toggle-mobile">
          <Sun slot="icon" class="mode-toggle__icon light" />
          <Moon slot="icon" class="mode-toggle__icon dark" />
          <SunMoon slot="icon" class="mode-toggle__icon auto" />
        </Link>
      </li>
    </ul>
  </nav>
</header>

<style>
  @layer components {
    header {
      display: flex;
      position: fixed;
      align-items: center;
      justify-content: center;
      justify-items: center;
      width: 100%;
      z-index: 10;
    }

    #popover-menu {
      justify-items: center;
      border: none;
      transition-duration: 350ms;
      transition-behavior: allow-discrete;
      transition-property: opacity, transform, display, overlay;
      opacity: 0;
      transform: translateY(-1.5rem);
      background-color: transparent;
      margin-inline: auto;
      margin-block-start: var(--spacing-16);

      & ul {
        flex-direction: column;
        gap: var(--spacing-8);
      }

      &:popover-open {
        opacity: 1;
        transform: none;

        &::backdrop {
          opacity: 1;

          @starting-style {
            opacity: 0;
          }
        }

        @starting-style {
          & {
            opacity: 0;
            transform: translateY(-1.5rem);
          }
        }
      }

      &::backdrop {
        opacity: 0;
        transition-property: opacity;
        transition-duration: 350ms;
        backdrop-filter: blur(2px) brightness(30%);
      }
    }

    nav {
      padding: var(--spacing-4);
      border-bottom-right-radius: var(--border-radius-lg);
      border-bottom-left-radius: var(--border-radius-lg);
    }

    ul {
      display: flex;
      gap: var(--spacing-3);
      background-color: color-mix(in srgb, var(--gray-2) 40%, transparent);
      backdrop-filter: blur(2px);
      padding: var(--spacing-2);
      border-radius: var(--border-radius-full);
    }

    .mode-toggle {
      min-inline-size: var(--sizing-32);
      padding-inline: 0;
    }

    .mode-toggle__icon {
      position: absolute;
      top: 50%;
      translate: 0 -50%;
      transition-behavior: allow-discrete;
      transition-property: display, opacity;
      transition-duration: 500ms;
      opacity: 1;

      @starting-style {
        opacity: 0;
      }
    }

    :root[data-theme="dark"] :is(.light, .auto) {
      display: none;
      opacity: 0;
    }

    :root[data-theme="light"] :is(.dark, .auto) {
      display: none;
      opacity: 0;
    }

    :root[data-theme="auto"] :is(.dark, .light) {
      display: none;
      opacity: 0;
    }

    .light,
    .auto {
      font-size: var(--font-size-5);
    }

    li {
      display: flex;
      position: relative;
    }

    .popover-button {
      display: none;
      box-shadow: 0px 0px 15px 0px black;
      margin-block-start: var(--spacing-4);
    }

    @media (width < 48rem) {
      nav:not(#popover-menu) {
        display: none;
      }

      ul {
        background-color: transparent;
        align-items: center;
      }

      .popover-button {
        display: flex;
      }

      .mode-toggle {
        padding-block: var(--spacing-14);
      }
    }
  }
</style>

<script is:inline>
  console.log("press");
  const theme = localStorage?.getItem("theme") ?? "auto";
  document.documentElement.dataset.theme = theme;
  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    let newTheme = theme;

    if (element.dataset.theme === "auto") {
      newTheme = "light";
    } else if (element.dataset.theme === "light") {
      newTheme = "dark";
    } else {
      newTheme = "auto";
    }

    element.dataset.theme = newTheme;
    localStorage.setItem("theme", newTheme);
  };

  document
    .getElementById("mode-toggle")
    ?.addEventListener("click", handleToggleClick);
  document
    .getElementById("mode-toggle-mobile")
    ?.addEventListener("click", handleToggleClick);
</script>
